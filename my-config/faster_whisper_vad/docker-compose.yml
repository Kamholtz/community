version: '3.8'

services:
  realtime-transcription:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: realtime-transcription
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    environment:
      - DISPLAY=${DISPLAY}
      - PULSE_SERVER=unix:/run/user/${USER_ID:-1000}/pulse/native
      - MODEL_SIZE=${MODEL_SIZE:-small}
      - DEVICE=${DEVICE:-auto}
      - VAD_AGGRESSIVENESS=${VAD_AGGRESSIVENESS:-2}
      - PARTIAL_INTERVAL=${PARTIAL_INTERVAL:-0.9}
      - START_GATE_MS=${START_GATE_MS:-200}
      - END_GATE_MS=${END_GATE_MS:-400}
      - PAD_MS=${PAD_MS:-250}
    volumes:
      # X11 socket for display access
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      # PulseAudio socket
      - /run/user/1000/pulse:/run/user/1000/pulse:ro
      # Model cache (persistent across runs)
      - ./models:/app/models
      # Configuration
      - ./config:/app/config
    devices:
      # Direct audio device access (fallback)
      - /dev/snd:/dev/snd
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    network_mode: host
    stdin_open: true
    tty: true
    restart: unless-stopped

  # Development service with shell access
  transcription-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: realtime-transcription-dev
    environment:
      - DISPLAY=${DISPLAY}
      - PULSE_SERVER=unix:/run/user/${USER_ID:-1000}/pulse/native
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /run/user/1000/pulse:/run/user/1000/pulse:ro
      - ./models:/app/models
      - ./config:/app/config
      - .:/app/src  # Mount source code for development
    devices:
      - /dev/snd:/dev/snd
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    network_mode: host
    stdin_open: true
    tty: true
    command: /bin/bash
    profiles:
      - dev